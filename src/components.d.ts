/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CallBtn {
        "bgColor": string;
        "borderColor": string;
        "font": "Arial" | "Georgia" | "Helvetica" | "Verdana" | "Open Sans" | "Roboto";
        "fontSize": string;
        "fontWeight": "normal" | "bold" | "bolder";
        "opacity": string;
        "rounded": boolean;
        "text": string;
        "textColor": string;
    }
    interface CallDialog {
        "callDuration": number;
        "isOpen": boolean;
        "logoSrc": string;
    }
    interface TwCaller {
        "btnText": string;
        "callEndpoint": string;
        "calleNumber": string;
        "logoSrc": string;
    }
}
declare global {
    interface HTMLCallBtnElement extends Components.CallBtn, HTMLStencilElement {
    }
    var HTMLCallBtnElement: {
        prototype: HTMLCallBtnElement;
        new (): HTMLCallBtnElement;
    };
    interface HTMLCallDialogElement extends Components.CallDialog, HTMLStencilElement {
    }
    var HTMLCallDialogElement: {
        prototype: HTMLCallDialogElement;
        new (): HTMLCallDialogElement;
    };
    interface HTMLTwCallerElement extends Components.TwCaller, HTMLStencilElement {
    }
    var HTMLTwCallerElement: {
        prototype: HTMLTwCallerElement;
        new (): HTMLTwCallerElement;
    };
    interface HTMLElementTagNameMap {
        "call-btn": HTMLCallBtnElement;
        "call-dialog": HTMLCallDialogElement;
        "tw-caller": HTMLTwCallerElement;
    }
}
declare namespace LocalJSX {
    interface CallBtn {
        "bgColor"?: string;
        "borderColor"?: string;
        "font"?: "Arial" | "Georgia" | "Helvetica" | "Verdana" | "Open Sans" | "Roboto";
        "fontSize"?: string;
        "fontWeight"?: "normal" | "bold" | "bolder";
        "opacity"?: string;
        "rounded"?: boolean;
        "text"?: string;
        "textColor"?: string;
    }
    interface CallDialog {
        "callDuration"?: number;
        "isOpen"?: boolean;
        "logoSrc"?: string;
        "onClose"?: (event: CustomEvent<any>) => void;
    }
    interface TwCaller {
        "btnText"?: string;
        "callEndpoint"?: string;
        "calleNumber"?: string;
        "logoSrc"?: string;
        "onClosed"?: (event: CustomEvent<any>) => void;
        "onOpened"?: (event: CustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "call-btn": CallBtn;
        "call-dialog": CallDialog;
        "tw-caller": TwCaller;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "call-btn": LocalJSX.CallBtn & JSXBase.HTMLAttributes<HTMLCallBtnElement>;
            "call-dialog": LocalJSX.CallDialog & JSXBase.HTMLAttributes<HTMLCallDialogElement>;
            "tw-caller": LocalJSX.TwCaller & JSXBase.HTMLAttributes<HTMLTwCallerElement>;
        }
    }
}
